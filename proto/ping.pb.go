// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ping.proto

/*
Package im_v1 is a generated protocol buffer package.

It is generated from these files:
	ping.proto

It has these top-level messages:
	Connect
	ConnAck
	SyncSession
	SyncSessionAck
	Submit
	SubmitAck
	Deliver
	DeliverAck
	ConnectRequest
	ConnectResponse
	SyncSessionRequest
	SyncSessionResponse
	SubmitRequest
	SubmitResponse
	DeliverRequest
	DeliverResponse
	SeqModifyRequest
	SeqModifyResponse
	DisconnectActiveRequest
	DisconnectActiveResponse
	DisconnectForceRequest
	DisconnectForceResponse
	HeartBeatRequest
	HeartBeatResponse
	RouterProto
	NotifyRequest
	NotifyResponse
*/
package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OsType int32

const (
	OsType_ANDROID OsType = 0
	OsType_IOS     OsType = 1
	OsType_PC      OsType = 2
)

var OsType_name = map[int32]string{
	0: "ANDROID",
	1: "IOS",
	2: "PC",
}
var OsType_value = map[string]int32{
	"ANDROID": 0,
	"IOS":     1,
	"PC":      2,
}

func (x OsType) String() string {
	return proto.EnumName(OsType_name, int32(x))
}
func (OsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ConnAckCode int32

const (
	ConnAckCode_ACCEPTED           ConnAckCode = 0
	ConnAckCode_CLIENTED_REJECTED  ConnAckCode = 1
	ConnAckCode_SERVER_UNAVAILABLE ConnAckCode = 2
	ConnAckCode_TOKEN_EXPIRY       ConnAckCode = 3
	ConnAckCode_LOGINED            ConnAckCode = 4
	ConnAckCode_UPGRADE            ConnAckCode = 5
	ConnAckCode_REPLACESERVER      ConnAckCode = 6
)

var ConnAckCode_name = map[int32]string{
	0: "ACCEPTED",
	1: "CLIENTED_REJECTED",
	2: "SERVER_UNAVAILABLE",
	3: "TOKEN_EXPIRY",
	4: "LOGINED",
	5: "UPGRADE",
	6: "REPLACESERVER",
}
var ConnAckCode_value = map[string]int32{
	"ACCEPTED":           0,
	"CLIENTED_REJECTED":  1,
	"SERVER_UNAVAILABLE": 2,
	"TOKEN_EXPIRY":       3,
	"LOGINED":            4,
	"UPGRADE":            5,
	"REPLACESERVER":      6,
}

func (x ConnAckCode) String() string {
	return proto.EnumName(ConnAckCode_name, int32(x))
}
func (ConnAckCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type UserType int32

const (
	UserType_NATURAL     UserType = 0
	UserType_SYSTEM      UserType = 1
	UserType_ASSISTANT   UserType = 2
	UserType_APPLICATION UserType = 3
)

var UserType_name = map[int32]string{
	0: "NATURAL",
	1: "SYSTEM",
	2: "ASSISTANT",
	3: "APPLICATION",
}
var UserType_value = map[string]int32{
	"NATURAL":     0,
	"SYSTEM":      1,
	"ASSISTANT":   2,
	"APPLICATION": 3,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}
func (UserType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type MsgType int32

const (
	MsgType_SINGLE MsgType = 0
	MsgType_GROUP  MsgType = 1
)

var MsgType_name = map[int32]string{
	0: "SINGLE",
	1: "GROUP",
}
var MsgType_value = map[string]int32{
	"SINGLE": 0,
	"GROUP":  1,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (MsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Connect struct {
	KeepAlive uint32 `protobuf:"varint,1,opt,name=keepAlive" json:"keepAlive,omitempty"`
	Token     []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Clientid  string `protobuf:"bytes,3,opt,name=clientid" json:"clientid,omitempty"`
	Version   uint32 `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	Os        OsType `protobuf:"varint,5,opt,name=os,enum=im.v1.OsType" json:"os,omitempty"`
}

func (m *Connect) Reset()                    { *m = Connect{} }
func (m *Connect) String() string            { return proto.CompactTextString(m) }
func (*Connect) ProtoMessage()               {}
func (*Connect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Connect) GetKeepAlive() uint32 {
	if m != nil {
		return m.KeepAlive
	}
	return 0
}

func (m *Connect) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Connect) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

func (m *Connect) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Connect) GetOs() OsType {
	if m != nil {
		return m.Os
	}
	return OsType_ANDROID
}

type ConnAck struct {
	AckCode ConnAckCode `protobuf:"varint,1,opt,name=ackCode,enum=im.v1.ConnAckCode" json:"ackCode,omitempty"`
}

func (m *ConnAck) Reset()                    { *m = ConnAck{} }
func (m *ConnAck) String() string            { return proto.CompactTextString(m) }
func (*ConnAck) ProtoMessage()               {}
func (*ConnAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConnAck) GetAckCode() ConnAckCode {
	if m != nil {
		return m.AckCode
	}
	return ConnAckCode_ACCEPTED
}

type SyncSession struct {
	Sessionid string             `protobuf:"bytes,1,opt,name=sessionid" json:"sessionid,omitempty"`
	MsgTotal  int32              `protobuf:"varint,2,opt,name=msgTotal" json:"msgTotal,omitempty"`
	Delivers  map[int32]*Deliver `protobuf:"bytes,3,rep,name=delivers" json:"delivers,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SyncSession) Reset()                    { *m = SyncSession{} }
func (m *SyncSession) String() string            { return proto.CompactTextString(m) }
func (*SyncSession) ProtoMessage()               {}
func (*SyncSession) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SyncSession) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

func (m *SyncSession) GetMsgTotal() int32 {
	if m != nil {
		return m.MsgTotal
	}
	return 0
}

func (m *SyncSession) GetDelivers() map[int32]*Deliver {
	if m != nil {
		return m.Delivers
	}
	return nil
}

type SyncSessionAck struct {
	Sessionid string `protobuf:"bytes,1,opt,name=sessionid" json:"sessionid,omitempty"`
}

func (m *SyncSessionAck) Reset()                    { *m = SyncSessionAck{} }
func (m *SyncSessionAck) String() string            { return proto.CompactTextString(m) }
func (*SyncSessionAck) ProtoMessage()               {}
func (*SyncSessionAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SyncSessionAck) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

// 上行
type Submit struct {
	To      string   `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
	ToType  UserType `protobuf:"varint,2,opt,name=toType,enum=im.v1.UserType" json:"toType,omitempty"`
	MsgType MsgType  `protobuf:"varint,3,opt,name=msgType,enum=im.v1.MsgType" json:"msgType,omitempty"`
	Notify  bool     `protobuf:"varint,4,opt,name=notify" json:"notify,omitempty"`
	Offline bool     `protobuf:"varint,5,opt,name=offline" json:"offline,omitempty"`
	History bool     `protobuf:"varint,6,opt,name=history" json:"history,omitempty"`
	Payload []byte   `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	Id      uint32   `protobuf:"varint,8,opt,name=id" json:"id,omitempty"`
	Ats     []string `protobuf:"bytes,9,rep,name=ats" json:"ats,omitempty"`
	Isatall bool     `protobuf:"varint,10,opt,name=isatall" json:"isatall,omitempty"`
}

func (m *Submit) Reset()                    { *m = Submit{} }
func (m *Submit) String() string            { return proto.CompactTextString(m) }
func (*Submit) ProtoMessage()               {}
func (*Submit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Submit) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Submit) GetToType() UserType {
	if m != nil {
		return m.ToType
	}
	return UserType_NATURAL
}

func (m *Submit) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_SINGLE
}

func (m *Submit) GetNotify() bool {
	if m != nil {
		return m.Notify
	}
	return false
}

func (m *Submit) GetOffline() bool {
	if m != nil {
		return m.Offline
	}
	return false
}

func (m *Submit) GetHistory() bool {
	if m != nil {
		return m.History
	}
	return false
}

func (m *Submit) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Submit) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Submit) GetAts() []string {
	if m != nil {
		return m.Ats
	}
	return nil
}

func (m *Submit) GetIsatall() bool {
	if m != nil {
		return m.Isatall
	}
	return false
}

type SubmitAck struct {
	Id        uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Sessionid string `protobuf:"bytes,2,opt,name=sessionid" json:"sessionid,omitempty"`
	Seq       uint64 `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
	Timestamp uint64 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *SubmitAck) Reset()                    { *m = SubmitAck{} }
func (m *SubmitAck) String() string            { return proto.CompactTextString(m) }
func (*SubmitAck) ProtoMessage()               {}
func (*SubmitAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SubmitAck) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SubmitAck) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

func (m *SubmitAck) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SubmitAck) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Deliver struct {
	SessionID string   `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	From      string   `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	FromType  UserType `protobuf:"varint,3,opt,name=fromType,enum=im.v1.UserType" json:"fromType,omitempty"`
	To        string   `protobuf:"bytes,4,opt,name=to" json:"to,omitempty"`
	Timestamp uint64   `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	MsgType   MsgType  `protobuf:"varint,6,opt,name=msgType,enum=im.v1.MsgType" json:"msgType,omitempty"`
	Seq       uint64   `protobuf:"varint,7,opt,name=seq" json:"seq,omitempty"`
	Payload   []byte   `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	Upgrade   bool     `protobuf:"varint,9,opt,name=upgrade" json:"upgrade,omitempty"`
}

func (m *Deliver) Reset()                    { *m = Deliver{} }
func (m *Deliver) String() string            { return proto.CompactTextString(m) }
func (*Deliver) ProtoMessage()               {}
func (*Deliver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Deliver) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *Deliver) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Deliver) GetFromType() UserType {
	if m != nil {
		return m.FromType
	}
	return UserType_NATURAL
}

func (m *Deliver) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Deliver) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Deliver) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_SINGLE
}

func (m *Deliver) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Deliver) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Deliver) GetUpgrade() bool {
	if m != nil {
		return m.Upgrade
	}
	return false
}

type DeliverAck struct {
	SessionID string `protobuf:"bytes,1,opt,name=sessionID" json:"sessionID,omitempty"`
	Seq       uint64 `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
}

func (m *DeliverAck) Reset()                    { *m = DeliverAck{} }
func (m *DeliverAck) String() string            { return proto.CompactTextString(m) }
func (*DeliverAck) ProtoMessage()               {}
func (*DeliverAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeliverAck) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *DeliverAck) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

// 连接RPC请求包
type ConnectRequest struct {
	Connect  *Connect `protobuf:"bytes,1,opt,name=connect" json:"connect,omitempty"`
	Serverid string   `protobuf:"bytes,2,opt,name=serverid" json:"serverid,omitempty"`
}

func (m *ConnectRequest) Reset()                    { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()               {}
func (*ConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ConnectRequest) GetConnect() *Connect {
	if m != nil {
		return m.Connect
	}
	return nil
}

func (m *ConnectRequest) GetServerid() string {
	if m != nil {
		return m.Serverid
	}
	return ""
}

// 连接RPC响应包
type ConnectResponse struct {
	Ack      *ConnAck          `protobuf:"bytes,1,opt,name=ack" json:"ack,omitempty"`
	Userid   string            `protobuf:"bytes,2,opt,name=userid" json:"userid,omitempty"`
	Sessions map[uint64]string `protobuf:"bytes,3,rep,name=sessions" json:"sessions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConnectResponse) Reset()                    { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()               {}
func (*ConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ConnectResponse) GetAck() *ConnAck {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *ConnectResponse) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *ConnectResponse) GetSessions() map[uint64]string {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type SyncSessionRequest struct {
	SyncSession []byte `protobuf:"bytes,1,opt,name=syncSession,proto3" json:"syncSession,omitempty"`
	Userid      string `protobuf:"bytes,2,opt,name=userid" json:"userid,omitempty"`
	Clientid    string `protobuf:"bytes,3,opt,name=clientid" json:"clientid,omitempty"`
}

func (m *SyncSessionRequest) Reset()                    { *m = SyncSessionRequest{} }
func (m *SyncSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncSessionRequest) ProtoMessage()               {}
func (*SyncSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SyncSessionRequest) GetSyncSession() []byte {
	if m != nil {
		return m.SyncSession
	}
	return nil
}

func (m *SyncSessionRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *SyncSessionRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

type SyncSessionResponse struct {
	Ret bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *SyncSessionResponse) Reset()                    { *m = SyncSessionResponse{} }
func (m *SyncSessionResponse) String() string            { return proto.CompactTextString(m) }
func (*SyncSessionResponse) ProtoMessage()               {}
func (*SyncSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SyncSessionResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *SyncSessionResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SubmitRequest struct {
	Submit   *Submit `protobuf:"bytes,1,opt,name=submit" json:"submit,omitempty"`
	Userid   string  `protobuf:"bytes,2,opt,name=userid" json:"userid,omitempty"`
	Clientid string  `protobuf:"bytes,3,opt,name=clientid" json:"clientid,omitempty"`
}

func (m *SubmitRequest) Reset()                    { *m = SubmitRequest{} }
func (m *SubmitRequest) String() string            { return proto.CompactTextString(m) }
func (*SubmitRequest) ProtoMessage()               {}
func (*SubmitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SubmitRequest) GetSubmit() *Submit {
	if m != nil {
		return m.Submit
	}
	return nil
}

func (m *SubmitRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *SubmitRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

type SubmitResponse struct {
	Ret       bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Sessionid string `protobuf:"bytes,3,opt,name=sessionid" json:"sessionid,omitempty"`
	Seq       uint64 `protobuf:"varint,4,opt,name=seq" json:"seq,omitempty"`
	Timestamp uint64 `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *SubmitResponse) Reset()                    { *m = SubmitResponse{} }
func (m *SubmitResponse) String() string            { return proto.CompactTextString(m) }
func (*SubmitResponse) ProtoMessage()               {}
func (*SubmitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SubmitResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *SubmitResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *SubmitResponse) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

func (m *SubmitResponse) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SubmitResponse) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type DeliverRequest struct {
	Userid      string `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Clientid    string `protobuf:"bytes,2,opt,name=clientid" json:"clientid,omitempty"`
	Sessionid   string `protobuf:"bytes,3,opt,name=sessionid" json:"sessionid,omitempty"`
	Seq         uint64 `protobuf:"varint,4,opt,name=seq" json:"seq,omitempty"`
	DeliverBody []byte `protobuf:"bytes,5,opt,name=deliverBody,proto3" json:"deliverBody,omitempty"`
}

func (m *DeliverRequest) Reset()                    { *m = DeliverRequest{} }
func (m *DeliverRequest) String() string            { return proto.CompactTextString(m) }
func (*DeliverRequest) ProtoMessage()               {}
func (*DeliverRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *DeliverRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *DeliverRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

func (m *DeliverRequest) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

func (m *DeliverRequest) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *DeliverRequest) GetDeliverBody() []byte {
	if m != nil {
		return m.DeliverBody
	}
	return nil
}

type DeliverResponse struct {
	Ret bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *DeliverResponse) Reset()                    { *m = DeliverResponse{} }
func (m *DeliverResponse) String() string            { return proto.CompactTextString(m) }
func (*DeliverResponse) ProtoMessage()               {}
func (*DeliverResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *DeliverResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *DeliverResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SeqModifyRequest struct {
	Userid   string `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Clientid string `protobuf:"bytes,2,opt,name=clientid" json:"clientid,omitempty"`
	Seq      uint64 `protobuf:"varint,3,opt,name=seq" json:"seq,omitempty"`
}

func (m *SeqModifyRequest) Reset()                    { *m = SeqModifyRequest{} }
func (m *SeqModifyRequest) String() string            { return proto.CompactTextString(m) }
func (*SeqModifyRequest) ProtoMessage()               {}
func (*SeqModifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SeqModifyRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *SeqModifyRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

func (m *SeqModifyRequest) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type SeqModifyResponse struct {
	Ret bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *SeqModifyResponse) Reset()                    { *m = SeqModifyResponse{} }
func (m *SeqModifyResponse) String() string            { return proto.CompactTextString(m) }
func (*SeqModifyResponse) ProtoMessage()               {}
func (*SeqModifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *SeqModifyResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *SeqModifyResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type DisconnectActiveRequest struct {
	Userid   string `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Clientid string `protobuf:"bytes,2,opt,name=clientid" json:"clientid,omitempty"`
}

func (m *DisconnectActiveRequest) Reset()                    { *m = DisconnectActiveRequest{} }
func (m *DisconnectActiveRequest) String() string            { return proto.CompactTextString(m) }
func (*DisconnectActiveRequest) ProtoMessage()               {}
func (*DisconnectActiveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *DisconnectActiveRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *DisconnectActiveRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

type DisconnectActiveResponse struct {
	Ret bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *DisconnectActiveResponse) Reset()                    { *m = DisconnectActiveResponse{} }
func (m *DisconnectActiveResponse) String() string            { return proto.CompactTextString(m) }
func (*DisconnectActiveResponse) ProtoMessage()               {}
func (*DisconnectActiveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *DisconnectActiveResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *DisconnectActiveResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type DisconnectForceRequest struct {
	Userid   string `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Clientid string `protobuf:"bytes,2,opt,name=clientid" json:"clientid,omitempty"`
}

func (m *DisconnectForceRequest) Reset()                    { *m = DisconnectForceRequest{} }
func (m *DisconnectForceRequest) String() string            { return proto.CompactTextString(m) }
func (*DisconnectForceRequest) ProtoMessage()               {}
func (*DisconnectForceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *DisconnectForceRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *DisconnectForceRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

type DisconnectForceResponse struct {
	Ret bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *DisconnectForceResponse) Reset()                    { *m = DisconnectForceResponse{} }
func (m *DisconnectForceResponse) String() string            { return proto.CompactTextString(m) }
func (*DisconnectForceResponse) ProtoMessage()               {}
func (*DisconnectForceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DisconnectForceResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *DisconnectForceResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HeartBeatRequest struct {
	Userid   string `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Clientid string `protobuf:"bytes,2,opt,name=clientid" json:"clientid,omitempty"`
}

func (m *HeartBeatRequest) Reset()                    { *m = HeartBeatRequest{} }
func (m *HeartBeatRequest) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatRequest) ProtoMessage()               {}
func (*HeartBeatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *HeartBeatRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *HeartBeatRequest) GetClientid() string {
	if m != nil {
		return m.Clientid
	}
	return ""
}

type HeartBeatResponse struct {
	Ret bool   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *HeartBeatResponse) Reset()                    { *m = HeartBeatResponse{} }
func (m *HeartBeatResponse) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatResponse) ProtoMessage()               {}
func (*HeartBeatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *HeartBeatResponse) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *HeartBeatResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RouterProto struct {
	Userid string            `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Cs     map[string]string `protobuf:"bytes,2,rep,name=cs" json:"cs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RouterProto) Reset()                    { *m = RouterProto{} }
func (m *RouterProto) String() string            { return proto.CompactTextString(m) }
func (*RouterProto) ProtoMessage()               {}
func (*RouterProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *RouterProto) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *RouterProto) GetCs() map[string]string {
	if m != nil {
		return m.Cs
	}
	return nil
}

type NotifyRequest struct {
	Userid  string `protobuf:"bytes,1,opt,name=userid" json:"userid,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *NotifyRequest) Reset()                    { *m = NotifyRequest{} }
func (m *NotifyRequest) String() string            { return proto.CompactTextString(m) }
func (*NotifyRequest) ProtoMessage()               {}
func (*NotifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *NotifyRequest) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *NotifyRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type NotifyResponse struct {
	Code bool   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *NotifyResponse) Reset()                    { *m = NotifyResponse{} }
func (m *NotifyResponse) String() string            { return proto.CompactTextString(m) }
func (*NotifyResponse) ProtoMessage()               {}
func (*NotifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *NotifyResponse) GetCode() bool {
	if m != nil {
		return m.Code
	}
	return false
}

func (m *NotifyResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Connect)(nil), "im.v1.Connect")
	proto.RegisterType((*ConnAck)(nil), "im.v1.ConnAck")
	proto.RegisterType((*SyncSession)(nil), "im.v1.SyncSession")
	proto.RegisterType((*SyncSessionAck)(nil), "im.v1.SyncSessionAck")
	proto.RegisterType((*Submit)(nil), "im.v1.Submit")
	proto.RegisterType((*SubmitAck)(nil), "im.v1.SubmitAck")
	proto.RegisterType((*Deliver)(nil), "im.v1.Deliver")
	proto.RegisterType((*DeliverAck)(nil), "im.v1.DeliverAck")
	proto.RegisterType((*ConnectRequest)(nil), "im.v1.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "im.v1.ConnectResponse")
	proto.RegisterType((*SyncSessionRequest)(nil), "im.v1.SyncSessionRequest")
	proto.RegisterType((*SyncSessionResponse)(nil), "im.v1.SyncSessionResponse")
	proto.RegisterType((*SubmitRequest)(nil), "im.v1.SubmitRequest")
	proto.RegisterType((*SubmitResponse)(nil), "im.v1.SubmitResponse")
	proto.RegisterType((*DeliverRequest)(nil), "im.v1.DeliverRequest")
	proto.RegisterType((*DeliverResponse)(nil), "im.v1.DeliverResponse")
	proto.RegisterType((*SeqModifyRequest)(nil), "im.v1.SeqModifyRequest")
	proto.RegisterType((*SeqModifyResponse)(nil), "im.v1.SeqModifyResponse")
	proto.RegisterType((*DisconnectActiveRequest)(nil), "im.v1.DisconnectActiveRequest")
	proto.RegisterType((*DisconnectActiveResponse)(nil), "im.v1.DisconnectActiveResponse")
	proto.RegisterType((*DisconnectForceRequest)(nil), "im.v1.DisconnectForceRequest")
	proto.RegisterType((*DisconnectForceResponse)(nil), "im.v1.DisconnectForceResponse")
	proto.RegisterType((*HeartBeatRequest)(nil), "im.v1.HeartBeatRequest")
	proto.RegisterType((*HeartBeatResponse)(nil), "im.v1.HeartBeatResponse")
	proto.RegisterType((*RouterProto)(nil), "im.v1.RouterProto")
	proto.RegisterType((*NotifyRequest)(nil), "im.v1.NotifyRequest")
	proto.RegisterType((*NotifyResponse)(nil), "im.v1.NotifyResponse")
	proto.RegisterEnum("im.v1.OsType", OsType_name, OsType_value)
	proto.RegisterEnum("im.v1.ConnAckCode", ConnAckCode_name, ConnAckCode_value)
	proto.RegisterEnum("im.v1.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("im.v1.MsgType", MsgType_name, MsgType_value)
}

func init() { proto.RegisterFile("ping.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x6f, 0xe3, 0x44,
	0x14, 0x5f, 0xdb, 0x49, 0x1c, 0xbf, 0x34, 0xa9, 0x3b, 0x2c, 0x8b, 0x55, 0x2d, 0x52, 0x64, 0x2d,
	0x10, 0x15, 0x14, 0x89, 0xa2, 0xa5, 0x7c, 0x2c, 0x08, 0xd7, 0xf1, 0x16, 0xb3, 0x69, 0x12, 0x4d,
	0xd2, 0x6a, 0xf7, 0x54, 0x79, 0x9d, 0x69, 0xf1, 0xe6, 0xc3, 0xa9, 0xc7, 0x89, 0x94, 0x2b, 0x07,
	0x04, 0x07, 0x2e, 0x1c, 0xf8, 0xa3, 0x38, 0xf2, 0x17, 0xa1, 0x19, 0x8f, 0x1d, 0x27, 0xdd, 0x76,
	0x09, 0x3d, 0x65, 0xde, 0xc7, 0xbc, 0xf7, 0x7b, 0xef, 0xcd, 0xfc, 0x3c, 0x01, 0x98, 0x05, 0xd3,
	0xab, 0xe6, 0x2c, 0x0a, 0xe3, 0x10, 0x15, 0x83, 0x49, 0x73, 0xf1, 0xb9, 0xf9, 0xa7, 0x04, 0xaa,
	0x1d, 0x4e, 0xa7, 0xc4, 0x8f, 0xd1, 0x63, 0xd0, 0x46, 0x84, 0xcc, 0xac, 0x71, 0xb0, 0x20, 0x86,
	0x54, 0x97, 0x1a, 0x55, 0xbc, 0x52, 0xa0, 0x87, 0x50, 0x8c, 0xc3, 0x11, 0x99, 0x1a, 0x72, 0x5d,
	0x6a, 0xec, 0xe0, 0x44, 0x40, 0xfb, 0x50, 0xf6, 0xc7, 0x01, 0x99, 0xc6, 0xc1, 0xd0, 0x50, 0xea,
	0x52, 0x43, 0xc3, 0x99, 0x8c, 0x0c, 0x50, 0x17, 0x24, 0xa2, 0x41, 0x38, 0x35, 0x0a, 0x3c, 0x5a,
	0x2a, 0xa2, 0x0f, 0x41, 0x0e, 0xa9, 0x51, 0xac, 0x4b, 0x8d, 0xda, 0x61, 0xb5, 0xc9, 0x91, 0x34,
	0xbb, 0x74, 0xb0, 0x9c, 0x11, 0x2c, 0x87, 0xd4, 0x3c, 0x4a, 0x30, 0x59, 0xfe, 0x08, 0x7d, 0x06,
	0xaa, 0xe7, 0x8f, 0xec, 0x70, 0x98, 0x20, 0xaa, 0x1d, 0x22, 0xe1, 0x2e, 0x1c, 0x98, 0x05, 0xa7,
	0x2e, 0xe6, 0x3f, 0x12, 0x54, 0xfa, 0xcb, 0xa9, 0xdf, 0x27, 0x94, 0xe7, 0x79, 0x0c, 0x1a, 0x4d,
	0x96, 0xc1, 0x90, 0xef, 0xd7, 0xf0, 0x4a, 0xc1, 0xb0, 0x4f, 0xe8, 0xd5, 0x20, 0x8c, 0xbd, 0x31,
	0x2f, 0xaa, 0x88, 0x33, 0x19, 0x3d, 0x83, 0xf2, 0x90, 0xb0, 0xba, 0x23, 0x6a, 0x28, 0x75, 0xa5,
	0x51, 0x39, 0xac, 0x8b, 0xc4, 0xb9, 0xf8, 0xcd, 0x96, 0x70, 0x71, 0xa6, 0x71, 0xb4, 0xc4, 0xd9,
	0x8e, 0xfd, 0x17, 0x50, 0x5d, 0x33, 0x21, 0x1d, 0x94, 0x11, 0x59, 0x72, 0x08, 0x45, 0xcc, 0x96,
	0xe8, 0x09, 0x14, 0x17, 0xde, 0x78, 0x4e, 0x78, 0xe6, 0xca, 0x61, 0x4d, 0x44, 0x17, 0xdb, 0x70,
	0x62, 0xfc, 0x46, 0xfe, 0x4a, 0x32, 0x9b, 0x50, 0xcb, 0xe5, 0x64, 0x4d, 0xb9, 0xb3, 0x2c, 0xf3,
	0x0f, 0x19, 0x4a, 0xfd, 0xf9, 0xeb, 0x49, 0x10, 0xa3, 0x1a, 0xc8, 0x71, 0x28, 0x3c, 0xe4, 0x38,
	0x44, 0x9f, 0x40, 0x29, 0x0e, 0x59, 0x9b, 0x79, 0xd6, 0xda, 0xe1, 0xae, 0xc8, 0x7a, 0x46, 0x49,
	0xc4, 0xbb, 0x2f, 0xcc, 0xa8, 0x01, 0x2a, 0x6b, 0x05, 0xf3, 0x54, 0xb8, 0x67, 0x8a, 0xef, 0x34,
	0xd1, 0xe2, 0xd4, 0x8c, 0x1e, 0x41, 0x69, 0x1a, 0xc6, 0xc1, 0xe5, 0x92, 0xcf, 0xb8, 0x8c, 0x85,
	0xc4, 0x86, 0x1f, 0x5e, 0x5e, 0x8e, 0x83, 0x29, 0xe1, 0x73, 0x2e, 0xe3, 0x54, 0x64, 0x96, 0x9f,
	0x03, 0x1a, 0x87, 0xd1, 0xd2, 0x28, 0x25, 0x16, 0x21, 0x32, 0xcb, 0xcc, 0x5b, 0x8e, 0x43, 0x6f,
	0x68, 0xa8, 0xfc, 0x90, 0xa5, 0x22, 0x2b, 0x24, 0x18, 0x1a, 0x65, 0x7e, 0x8a, 0xe4, 0x60, 0xc8,
	0xfa, 0xe9, 0xc5, 0xd4, 0xd0, 0xea, 0x4a, 0x43, 0xc3, 0x6c, 0xc9, 0xf6, 0x06, 0xd4, 0x8b, 0xbd,
	0xf1, 0xd8, 0x80, 0x24, 0xaa, 0x10, 0xcd, 0x00, 0xb4, 0xa4, 0x1d, 0xac, 0x75, 0x49, 0x20, 0x29,
	0x0b, 0xb4, 0xd6, 0x4a, 0x79, 0xf3, 0x84, 0xe8, 0xa0, 0x50, 0x72, 0xcd, 0x5b, 0x50, 0xc0, 0x6c,
	0xc9, 0xfc, 0xe3, 0x60, 0x42, 0x68, 0xec, 0x4d, 0x66, 0xbc, 0xe2, 0x02, 0x5e, 0x29, 0xcc, 0x5f,
	0x65, 0x50, 0xc5, 0x04, 0x73, 0x91, 0xdd, 0xd6, 0xc6, 0x90, 0xdc, 0x16, 0x42, 0x50, 0xb8, 0x8c,
	0xc2, 0x89, 0x48, 0xc9, 0xd7, 0xe8, 0x53, 0x28, 0xb3, 0xdf, 0x5c, 0xd7, 0x6f, 0xcc, 0x27, 0x73,
	0x10, 0xa3, 0x2d, 0x64, 0xa3, 0x5d, 0x03, 0x56, 0xdc, 0x00, 0x96, 0x9f, 0x67, 0xe9, 0xee, 0x79,
	0x8a, 0x92, 0xd5, 0x55, 0xc9, 0xb9, 0xa9, 0x94, 0xd7, 0xa7, 0x62, 0x80, 0x3a, 0x9f, 0x5d, 0x45,
	0xde, 0x90, 0x18, 0x5a, 0xd2, 0x73, 0x21, 0x9a, 0xcf, 0x00, 0x44, 0x1f, 0xd6, 0xcf, 0xeb, 0xdb,
	0x5a, 0x21, 0x32, 0xca, 0x59, 0x46, 0xf3, 0x1c, 0x6a, 0x82, 0x93, 0x30, 0xb9, 0x9e, 0x13, 0x1a,
	0x33, 0xfc, 0x7e, 0xa2, 0xe1, 0xfb, 0x57, 0xf7, 0x25, 0xf5, 0x4b, 0xcd, 0xec, 0x52, 0x53, 0x12,
	0x2d, 0x48, 0x94, 0xcd, 0x33, 0x93, 0xcd, 0xbf, 0x25, 0xd8, 0xcd, 0x02, 0xd3, 0x59, 0x38, 0xa5,
	0x04, 0xd5, 0x41, 0xf1, 0xfc, 0xd1, 0x5b, 0xa2, 0x5a, 0xfe, 0x08, 0x33, 0x13, 0x3b, 0xe1, 0x73,
	0x9a, 0x8b, 0x27, 0x24, 0xf4, 0x03, 0xcb, 0xc4, 0x8b, 0x48, 0x29, 0xe2, 0xc9, 0x06, 0x28, 0x91,
	0xa3, 0x29, 0xae, 0x6e, 0x4a, 0x13, 0xe9, 0xae, 0xfd, 0x6f, 0xa1, 0xba, 0x66, 0xca, 0xd3, 0x44,
	0x21, 0xa1, 0x89, 0x87, 0x79, 0x9a, 0xd0, 0xf2, 0xb4, 0xf0, 0x06, 0x50, 0x8e, 0x16, 0xd2, 0x46,
	0xd5, 0xa1, 0x42, 0x57, 0x5a, 0x1e, 0x69, 0x07, 0xe7, 0x55, 0xb7, 0x96, 0x73, 0x07, 0x93, 0x9b,
	0x5f, 0xc3, 0x7b, 0x6b, 0xb9, 0x44, 0xef, 0x74, 0x50, 0x22, 0x92, 0x4c, 0xa4, 0x8c, 0xd9, 0x92,
	0x69, 0x26, 0xf4, 0x4a, 0x44, 0x66, 0x4b, 0xf3, 0x0d, 0x54, 0x93, 0xdb, 0x97, 0x22, 0xfc, 0x08,
	0x4a, 0x94, 0x2b, 0x44, 0xcf, 0x53, 0xfe, 0x17, 0x5e, 0xc2, 0xf8, 0xbf, 0x60, 0xfe, 0x22, 0x41,
	0x2d, 0x4d, 0xf6, 0xdf, 0x21, 0xae, 0x73, 0x80, 0x72, 0x0b, 0x07, 0x14, 0x6e, 0xe1, 0x80, 0xcd,
	0xab, 0x66, 0xfe, 0x25, 0x41, 0x2d, 0x65, 0x71, 0x51, 0xf2, 0xaa, 0x16, 0xe9, 0xd6, 0x5a, 0xe4,
	0x8d, 0x8f, 0xe7, 0xb6, 0xa0, 0xea, 0x50, 0x11, 0x9f, 0x9f, 0xe3, 0x70, 0xb8, 0xe4, 0xb0, 0x76,
	0x70, 0x5e, 0x65, 0x3e, 0x85, 0xdd, 0x0c, 0xd7, 0x16, 0x03, 0x7c, 0x09, 0x7a, 0x9f, 0x5c, 0x9f,
	0x86, 0xc3, 0xe0, 0x72, 0x79, 0x9f, 0x82, 0x6e, 0x70, 0xa9, 0x79, 0x04, 0x7b, 0xb9, 0xc8, 0x5b,
	0x40, 0x3a, 0x85, 0x0f, 0x5a, 0x01, 0x15, 0x37, 0xde, 0xf2, 0xe3, 0x60, 0x41, 0xee, 0x81, 0xcc,
	0xfc, 0x1e, 0x8c, 0x9b, 0xe1, 0xb6, 0x80, 0xd3, 0x86, 0x47, 0xab, 0xfd, 0xcf, 0xc3, 0xc8, 0xbf,
	0x17, 0x9a, 0xef, 0xf2, 0xc5, 0x89, 0x68, 0x5b, 0x80, 0x79, 0x0e, 0xfa, 0x8f, 0xc4, 0x8b, 0xe2,
	0x63, 0xe2, 0xc5, 0xf7, 0x81, 0x71, 0x04, 0x7b, 0xb9, 0x38, 0x5b, 0x00, 0xf8, 0x4d, 0x82, 0x0a,
	0x0e, 0xe7, 0x31, 0x89, 0x7a, 0xfc, 0xa1, 0x79, 0x5b, 0xf2, 0x03, 0x90, 0x7d, 0x6a, 0xc8, 0x9c,
	0x38, 0xf7, 0x05, 0x07, 0xe4, 0xf6, 0x35, 0x6d, 0x41, 0x97, 0xb2, 0x4f, 0xf7, 0x9f, 0x82, 0x6a,
	0xdf, 0xa4, 0x48, 0xed, 0x5d, 0x14, 0x69, 0x41, 0xb5, 0xc3, 0x5f, 0x23, 0xef, 0x6a, 0x44, 0xee,
	0x13, 0x27, 0xaf, 0x7d, 0xe2, 0xcc, 0x2f, 0xa1, 0x96, 0x86, 0x10, 0x3d, 0x40, 0x50, 0xf0, 0xd3,
	0xe7, 0x68, 0x19, 0xf3, 0xf5, 0xcd, 0x2e, 0x1c, 0x7c, 0x0c, 0xa5, 0xe4, 0x41, 0x8b, 0x2a, 0xa0,
	0x5a, 0x9d, 0x16, 0xee, 0xba, 0x2d, 0xfd, 0x01, 0x52, 0x41, 0x71, 0xbb, 0x7d, 0x5d, 0x42, 0x25,
	0x90, 0x7b, 0xb6, 0x2e, 0x1f, 0xfc, 0x2e, 0x41, 0x25, 0xf7, 0x94, 0x45, 0x3b, 0x50, 0xb6, 0x6c,
	0xdb, 0xe9, 0x0d, 0x1c, 0xe6, 0xfe, 0x3e, 0xec, 0xd9, 0x6d, 0xd7, 0xe9, 0x0c, 0x9c, 0xd6, 0x05,
	0x76, 0x7e, 0x72, 0x6c, 0xa6, 0x96, 0xd0, 0x23, 0x40, 0x7d, 0x07, 0x9f, 0x3b, 0xf8, 0xe2, 0xac,
	0x63, 0x9d, 0x5b, 0x6e, 0xdb, 0x3a, 0x6e, 0x3b, 0xba, 0x8c, 0x74, 0xd8, 0x19, 0x74, 0x5f, 0x38,
	0x9d, 0x0b, 0xe7, 0x65, 0xcf, 0xc5, 0xaf, 0x74, 0x85, 0x25, 0x6f, 0x77, 0x4f, 0xdc, 0x8e, 0xd3,
	0xd2, 0x0b, 0x4c, 0x38, 0xeb, 0x9d, 0x60, 0xab, 0xe5, 0xe8, 0x45, 0xb4, 0x07, 0x55, 0xec, 0xf4,
	0xda, 0x96, 0xed, 0x24, 0xa1, 0xf4, 0xd2, 0x81, 0x0d, 0xe5, 0xf4, 0xa1, 0xc1, 0x7c, 0x3b, 0xd6,
	0xe0, 0x0c, 0x5b, 0x6d, 0xfd, 0x01, 0x02, 0x28, 0xf5, 0x5f, 0xf5, 0x07, 0xce, 0xa9, 0x2e, 0xa1,
	0x2a, 0x68, 0x56, 0xbf, 0xef, 0xf6, 0x07, 0x56, 0x67, 0xa0, 0xcb, 0x68, 0x17, 0x2a, 0x56, 0xaf,
	0xd7, 0x76, 0x6d, 0x6b, 0xe0, 0x76, 0x3b, 0xba, 0x72, 0x50, 0x07, 0x55, 0xbc, 0x29, 0xf8, 0x36,
	0xb7, 0x73, 0xd2, 0x76, 0xf4, 0x07, 0x48, 0x83, 0xe2, 0x09, 0xee, 0x9e, 0xf5, 0x74, 0xe9, 0x75,
	0x89, 0xff, 0x01, 0xf9, 0xe2, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x38, 0xbe, 0x07, 0x8e,
	0x0c, 0x00, 0x00,
}
